diff -ruN irc2.11.2p3.orig/common/match.c irc2.11.2p3/common/match.c
--- irc2.11.2p3.orig/common/match.c	2005-02-04 19:40:06.000000000 +0100
+++ irc2.11.2p3/common/match.c	2019-12-31 20:13:45.494772468 +0100
@@ -334,7 +334,7 @@
 
 	ch = username;
 	if (*ch == '+' || *ch == '=' || *ch == '-' ||
-		*ch == '^' || *ch == '~')
+		*ch == '^' || *ch == '~' || *ch == '_')
 	{
 		/* do not allow them as first char */
 		return 0;
diff -ruN irc2.11.2p3.orig/common/numeric_def.h irc2.11.2p3/common/numeric_def.h
--- irc2.11.2p3.orig/common/numeric_def.h	2008-06-21 13:59:51.000000000 +0200
+++ irc2.11.2p3/common/numeric_def.h	2019-12-31 20:13:58.150793257 +0100
@@ -236,6 +236,10 @@
 #define RPL_ENDOFWHOIS       318
 #define RPL_WHOISCHANNELS    319
 
+#ifdef SPOOF_WHOISCLOAKED
+#define RPL_WHOISCLOAKED     320 /* client is cloaked/spoofed - non-standard use of 320 -- mh 20191230 */
+
+#endif
 #define RPL_LISTSTART        321
 #define RPL_LIST             322
 #define RPL_LISTEND          323
diff -ruN irc2.11.2p3.orig/common/patchlevel.h irc2.11.2p3/common/patchlevel.h
--- irc2.11.2p3.orig/common/patchlevel.h	2010-08-13 21:59:43.000000000 +0200
+++ irc2.11.2p3/common/patchlevel.h	2019-12-31 20:13:58.150793257 +0100
@@ -20,3 +20,4 @@
 #define PATCHLEVEL "0211020003"		/* for server identification */
 #define DEVLEVEL 'a'
 #endif
+#define SPOOF_VERSION "0-" /* release number (followed by a '-' if modified since release) -- mh 20191231 */
diff -ruN irc2.11.2p3.orig/common/struct_def.h irc2.11.2p3/common/struct_def.h
--- irc2.11.2p3.orig/common/struct_def.h	2009-11-13 21:08:10.000000000 +0100
+++ irc2.11.2p3/common/struct_def.h	2019-12-31 20:13:45.494772468 +0100
@@ -52,7 +52,7 @@
 #define	REALLEN	 	50
 #define	TOPICLEN	255
 #define	CHANNELLEN	50
-#define	PASSWDLEN 	20
+#define	PASSWDLEN 	64
 #define	KEYLEN		23
 #define	BUFSIZE		512		/* WARNING: *DONT* CHANGE THIS!!!! */
 #define	MAXRECIPIENTS 	20
@@ -192,6 +192,7 @@
 #define FLAGS_RESTRICT	0x0010 /* restricted user */
 #define FLAGS_AWAY	0x0020 /* user is away */
 #define FLAGS_EXEMPT    0x0040 /* user is exempted from k-lines */
+#define FLAGS_SPOOFED   0x0080 /* user is spoofed */
 #ifdef XLINE
 #define FLAGS_XLINED	0x0100	/* X-lined client */
 #endif
@@ -220,6 +221,7 @@
 #define	IsDead(x)		((x)->flags & FLAGS_DEADSOCK)
 #define	IsBursting(x)		(!((x)->flags & FLAGS_EOB))
 #define IsKlineExempt(x)        ((x)->user && (x)->user->flags & FLAGS_EXEMPT)
+#define IsSpoofed(x)            ((x)->user && (x)->user->flags & FLAGS_SPOOFED)
 
 #define	SetDead(x)		((x)->flags |= FLAGS_DEADSOCK)
 #define	CBurst(x)		((x)->flags & FLAGS_CBURST)
@@ -238,6 +240,7 @@
 #define	SetEOB(x)		((x)->flags |= FLAGS_EOB)
 #define SetListenerInactive(x)	((x)->flags |= FLAGS_LISTENINACTIVE)
 #define SetKlineExempt(x)	((x)->user->flags |= FLAGS_EXEMPT)
+#define SetSpoofed(x)		((x)->user->flags |= FLAGS_SPOOFED)
 
 #define	DoingDNS(x)		((x)->flags & FLAGS_DOINGDNS)
 #define	DoingAuth(x)		((x)->flags & FLAGS_AUTH)
@@ -375,7 +378,7 @@
 #ifdef XLINE
 #define CFLAG_XEXEMPT		0x00080
 #endif
-
+#define CFLAG_SPOOFED		0x00200
 #define IsConfRestricted(x)	((x)->flags & CFLAG_RESTRICTED)
 #define IsConfRNoDNS(x)		((x)->flags & CFLAG_RNODNS)
 #define IsConfRNoIdent(x)	((x)->flags & CFLAG_RNOIDENT)
@@ -386,7 +389,7 @@
 #ifdef XLINE
 #define IsConfXlineExempt(x)	((x)->flags & CFLAG_XEXEMPT)
 #endif
-
+#define IsConfSpoofed(x)	((x)->flags & CFLAG_SPOOFED)
 #define PFLAG_DELAYED		0x00001
 #define PFLAG_SERVERONLY	0x00002
 
diff -ruN irc2.11.2p3.orig/common/support.c irc2.11.2p3/common/support.c
--- irc2.11.2p3.orig/common/support.c	2009-03-15 02:25:32.000000000 +0100
+++ irc2.11.2p3/common/support.c	2019-12-31 20:13:45.494772468 +0100
@@ -782,7 +782,7 @@
 char	*make_version(void)
 {
 	int ve, re, mi, dv, pl;
-	char ver[15];
+	char ver[32];
 
 	sscanf(PATCHLEVEL, "%2d%2d%2d%2d%2d", &ve, &re, &mi, &dv, &pl);
 	/* version & revision */
@@ -794,6 +794,9 @@
 		sprintf(ver + strlen(ver), "%c%d", DEVLEVEL, dv);
 	if (pl)	/* patchlevel */
 		sprintf(ver + strlen(ver), "p%d", pl);
+
+	strcat(ver, "+spoof");
+
 	return mystrdup(ver);
 }
 
diff -ruN irc2.11.2p3.orig/ircd/s_conf.c irc2.11.2p3/ircd/s_conf.c
--- irc2.11.2p3.orig/ircd/s_conf.c	2010-08-11 19:16:51.000000000 +0200
+++ irc2.11.2p3/ircd/s_conf.c	2019-12-31 20:13:45.498772535 +0100
@@ -613,6 +613,12 @@
 		{
 			find_bounce(cptr, ConfClass(aconf), -1);
 		}
+		if(IsConfSpoofed(aconf))
+		{
+			strcpy(cptr->sockhost, aconf->name2);
+			strcpy(cptr->user->host, aconf->name2);
+			SetSpoofed(cptr);
+		}
 		break;
 	}
 	if (retval == -2)
@@ -1798,7 +1804,12 @@
 					iline_flags_parse(tmp3) :
 					pline_flags_parse(tmp3));
 			}
-
+			/* any spoofed host in this line? */
+			if(aconf->status & CONF_CLIENT && tmp4 && *tmp4)
+			{
+				DupString(aconf->name2, tmp4);
+				aconf->flags |= CFLAG_SPOOFED;
+			}	
 			/* trying to find exact conf line in already existing
 			 * conf, so we don't delete old one, just update it */
 			if (
diff -ruN irc2.11.2p3.orig/ircd/s_debug.c irc2.11.2p3/ircd/s_debug.c
--- irc2.11.2p3.orig/ircd/s_debug.c	2009-11-13 21:25:55.000000000 +0100
+++ irc2.11.2p3/ircd/s_debug.c	2019-12-31 20:13:58.150793257 +0100
@@ -341,6 +341,34 @@
 	sendto_one(cptr, ":%s %d %s :CCL:0x%X", ME, RPL_STATSDEFINE, nick,
 		CLIENTS_CHANNEL_LEVEL);
 #endif
+
+#ifdef SPOOF_VERSION
+#ifdef SPOOF_STATSDEFINE
+	/* spoof defines
+	 *
+	 * Spoof:<version> SN:<notice> SW:<whois>
+	 *
+	 * version: SPOOF_VERSION string
+	 * notice:  1 if SPOOF_NOTICE is defined, otherwise 0
+	 * whois:   1 if SPOOF_WHOISCLOAKED is defined, otherwise 0
+	 *
+	 * -- mh 20191231 */
+	sendto_one(cptr, ":%s %d %s :Spoof:%s SN:%d SW:%d", ME, RPL_STATSDEFINE, nick,
+		SPOOF_VERSION,
+#ifdef SPOOF_NOTICE
+		1,
+#else
+		0,
+#endif
+#ifdef SPOOF_WHOISCLOAKED
+		1
+#else
+		0
+#endif
+	);
+
+#endif
+#endif
 	/* note that it's safe to check extend[1], it will at worst be null.
 	** if we ever need extend[2], check length first... --B. */
 	if (extend[1] == '5')
diff -ruN irc2.11.2p3.orig/ircd/s_err.c irc2.11.2p3/ircd/s_err.c
--- irc2.11.2p3.orig/ircd/s_err.c	2010-08-12 18:24:31.000000000 +0200
+++ irc2.11.2p3/ircd/s_err.c	2019-12-31 20:13:58.150793257 +0100
@@ -352,7 +352,11 @@
 #endif
 /* 318 RPL_ENDOFWHOIS */	":%s 318 %s %s :End of WHOIS list.",
 /* 319 RPL_WHOISCHANNELS */	":%s 319 %s %s :%s",
+#ifdef SPOOF_WHOISCLOAKED
+/* 320 RPL_WHOISCLOAKED */  ":%s 320 %s %s :%s", /* client is cloaked/spoofed - non-standard use of 320 -- mh 20191230 */
+#else
 /* 320 */ (char *)NULL,
+#endif
 /* 321 RPL_LISTSTART */	":%s 321 %s Channel :Users  Name",
 /* 322 RPL_LIST */	":%s 322 %s %s %d :%s",
 /* 323 RPL_LISTEND */	":%s 323 %s :End of LIST",
diff -ruN irc2.11.2p3.orig/ircd/s_misc.c irc2.11.2p3/ircd/s_misc.c
--- irc2.11.2p3.orig/ircd/s_misc.c	2009-11-13 21:08:11.000000000 +0100
+++ irc2.11.2p3/ircd/s_misc.c	2019-12-31 20:13:45.498772535 +0100
@@ -196,7 +196,7 @@
 				(void)sprintf(nbuf, "%s[%.*s@%s]",
 					sptr->name, USERLEN,
 					(!(sptr->flags & FLAGS_GOTID)) ? "" :
-					sptr->auth, sptr->user ? sptr->user->sip :
+					sptr->auth, sptr->user ? get_client_ip(sptr) :
 #ifdef INET6 
 					      inetntop(AF_INET6,
 						       (char *)&sptr->ip,
@@ -247,6 +247,18 @@
 	return nbuf;
 }
 
+char	*get_client_ip(aClient *cptr)
+{
+	if(IsSpoofed(cptr))
+	{
+		return "255.255.255.255";
+	}
+	else
+	{
+		return cptr->user->sip;
+	}
+}
+
 /*
  * Form sockhost such that if the host is of form user@host, only the host
  * portion is copied.
diff -ruN irc2.11.2p3.orig/ircd/s_misc_ext.h irc2.11.2p3/ircd/s_misc_ext.h
--- irc2.11.2p3.orig/ircd/s_misc_ext.h	2004-03-14 18:46:00.000000000 +0100
+++ irc2.11.2p3/ircd/s_misc_ext.h	2019-12-31 20:13:45.498772535 +0100
@@ -42,6 +42,7 @@
 EXTERN int check_registered_service (aClient *sptr);
 EXTERN char *get_client_name (aClient *sptr, int showip);
 EXTERN char *get_client_host (aClient *cptr);
+EXTERN char *get_client_ip (aClient *cptr);
 EXTERN void get_sockhost (Reg aClient *cptr, Reg char *host);
 EXTERN char *my_name_for_link (char *name, Reg int count);
 EXTERN int mark_blind_servers (aClient *cptr, aClient *server);
diff -ruN irc2.11.2p3.orig/ircd/s_serv.c irc2.11.2p3/ircd/s_serv.c
--- irc2.11.2p3.orig/ircd/s_serv.c	2010-08-12 18:24:31.000000000 +0200
+++ irc2.11.2p3/ircd/s_serv.c	2019-12-31 20:13:45.498772535 +0100
@@ -1264,7 +1264,7 @@
 					   acptr->name, acptr->user->uid,
 					   acptr->user->username,
 					   acptr->user->host,
-					   acptr->user->sip,
+					   get_client_ip(acptr),
 					   (*buf) ? buf : "+", acptr->info);
 		    }
 		else if (IsService(acptr) &&
@@ -1783,6 +1783,9 @@
 #endif
 			else if ((tmp->status & CONF_CLIENT))
 			{
+				if(IsConfSpoofed(tmp))
+					continue;
+
 				sendto_one(sptr, replies[p[1]], ME, BadTo(to),
 					   c, host, (pass) ? "*" : null,
 					   name, port, get_conf_class(tmp),
@@ -2880,7 +2883,7 @@
 				IsAnOper(acptr) ? "Oper" : "User", 
 				get_client_class(acptr), 
 				acptr->name, acptr->user->username, 
-				acptr->user->host, acptr->user->sip,
+				acptr->user->host, get_client_ip(acptr),
 #ifdef XLINE
 				acptr->user2, acptr->user3, 
 #else
@@ -2916,7 +2919,7 @@
 			IsAnOper(acptr) ? "Oper" : "User", 
 			MyClient(acptr) ? get_client_class(acptr) : -1, 
 			acptr->name, acptr->user->username,
-			acptr->user->host, acptr->user->sip, 
+			acptr->user->host, get_client_ip(acptr), 
 #ifdef XLINE
 			MyClient(acptr) ? acptr->user2 : "-",
 			MyClient(acptr) ? acptr->user3 : "-",
diff -ruN irc2.11.2p3.orig/ircd/s_service.c irc2.11.2p3/ircd/s_service.c
--- irc2.11.2p3.orig/ircd/s_service.c	2010-08-12 03:08:02.000000000 +0200
+++ irc2.11.2p3/ircd/s_service.c	2019-12-31 20:13:45.498772535 +0100
@@ -180,7 +180,7 @@
 			sptr->user->uid,
 			(wants & SERVICE_WANT_USER) ? sptr->user->username : ".",
 			(wants & SERVICE_WANT_USER) ? sptr->user->host : ".",
-			(wants & SERVICE_WANT_USER) ? sptr->user->sip : ".",
+			(wants & SERVICE_WANT_USER) ? get_client_ip(sptr) : ".",
 			(wants & (SERVICE_WANT_UMODE|SERVICE_WANT_OPER)) ? umode : "+",
 			(wants & SERVICE_WANT_USER) ? sptr->info : "");
 	else
diff -ruN irc2.11.2p3.orig/ircd/s_user.c irc2.11.2p3/ircd/s_user.c
--- irc2.11.2p3.orig/ircd/s_user.c	2010-08-12 18:29:30.000000000 +0200
+++ irc2.11.2p3/ircd/s_user.c	2019-12-31 20:13:58.150793257 +0100
@@ -581,6 +581,9 @@
 			}
 			return exit_client(cptr, cptr, &me, exit_msg[i].longm);
 		}
+
+		aconf = sptr->confs->value.aconf;
+
 #ifndef	NO_PREFIX
 		if (IsRestricted(sptr))
 		{
@@ -596,9 +599,16 @@
 			strncpy(&user->username[1], buf2, USERLEN);
 			user->username[USERLEN] = '\0';
 		}
-#endif
 
-		aconf = sptr->confs->value.aconf;
+		if(IsConfSpoofed(aconf))
+                {
+                        prefix = '_';
+                        *user->username = prefix;
+                        strncpy(&user->username[1], buf2, USERLEN);
+                        user->username[USERLEN] = '\0';
+
+                }
+#endif
 #ifdef UNIXPORT
 		if (IsUnixSocket(sptr))
 		{
@@ -783,6 +793,14 @@
 				" but still matches channel MODEs.",
 				ME, nick);
 		}
+#ifdef SPOOF_NOTICE
+		/* send a notice to client if the connection is spoofed.
+		 * notice is defined as SPOOF_NOTICE in config.h -- mh 20191230 */
+		if (IsConfSpoofed(sptr->confs->value.aconf))
+		{
+			sendto_one(sptr, ":%s NOTICE %s :%s", ME, nick, SPOOF_NOTICE);
+		}
+#endif
 		send_umode(sptr, sptr, 0, ALL_UMODES, buf);
 		nextping = timeofday;
 		
@@ -806,7 +824,7 @@
 		sendto_one(acptr,
 				":%s UNICK %s %s %s %s %s %s :%s",
 				user->servp->sid, nick, user->uid,
-				user->username, user->host, user->sip,
+				user->username, user->host, get_client_ip(sptr),
 				(*buf) ? buf : "+", sptr->info);
 	}	/* for(my-leaf-servers) */
 #ifdef	USE_SERVICES
@@ -2040,6 +2058,15 @@
 	if (user->flags & FLAGS_AWAY)
 		send_away(sptr, user->bcptr);
 
+#ifdef SPOOF_WHOISCLOAKED
+	/* send a 320 numeric reply if client is spoofed.
+	 * reply defined as SPOOF_WHOISCLOAKED in config.h -- mh 20191230 */
+	if (IsSpoofed(acptr))
+	{
+		sendto_one(sptr, replies[RPL_WHOISCLOAKED], ME, BadTo(sptr->name), name, SPOOF_WHOISCLOAKED);
+	}
+
+#endif
 	if (IsAnOper(acptr))
 		sendto_one(sptr, replies[RPL_WHOISOPERATOR], ME, BadTo(sptr->name), name);
 
diff -ruN irc2.11.2p3.orig/support/config.h.dist irc2.11.2p3/support/config.h.dist
--- irc2.11.2p3.orig/support/config.h.dist	2010-08-13 21:53:03.000000000 +0200
+++ irc2.11.2p3/support/config.h.dist	2019-12-31 20:13:58.150793257 +0100
@@ -139,6 +139,30 @@
 #define	OPER_KILL_REMOTE
 
 /*
+ * spoof
+ *
+ */
+	/*
+	 * undefine SPOOF_NOTICE to disable sending a notice to cloaked clients
+	 * when connecting
+	 *
+	 */
+	#define SPOOF_NOTICE "Due to an administrative decision, your connection is cloaked."
+
+	/*
+	 * undefine SPOOF_WHOISCLOAKED to disable sending a 320 numeric in /WHOIS
+	 * reply for cloaked (local) clients. non-standard use of 320.
+	 *
+	 */
+	#define SPOOF_WHOISCLOAKED "connection is cloaked (spoof)"
+
+	/*
+	 * undefine SPOOF_STATSDEFINE to disable showing spoof defines in /STATS d
+	 *
+	 */
+	#define SPOOF_STATSDEFINE
+
+/*
  * Maximum number of network connections your server will allow.  This must
  * not exceed OS limit of max. number of open file descriptors available upon
  * ircd start.
